# Mageplaza
#
# NOTICE OF LICENSE
#
# This source file is subject to the Mageplaza.com license that is
# available through the world-wide-web at this URL:
# https://www.mageplaza.com/LICENSE.txt
#
# DISCLAIMER
#
# Do not edit or add to this file if you wish to upgrade this extension to newer
# version in the future.
#
# @category    Mageplaza
# @package     Mageplaza_CompanyAccountsGraphQl
# @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)
# @license     https://www.mageplaza.com/LICENSE.txt

type Query {
    mpCompanyAccountsDownloadable: [DownloadableOutput] @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\Company\\Downloadable") @doc(description: "Query to get downloadable product of customer")
    mpCompanyAccounts: CompanyOutput @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\Company\\Company") @doc(description: "Query to get company info")
    mpCompanyAccountsOrders: [OrdersOutput] @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\Company\\Orders") @doc(description: "Query to get orders of company")
    mpCompanyAccountsUsers: [UsersOutput] @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\User\\Users") @doc(description: "Query to get users of company")
    mpCompanyAccountsUserRoles: [UserRolesOutput] @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\UserRole\\UserRoles") @doc(description: "Query to get user roles of company")
    mpCompanyAccountsConfig: ConfigOutput @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\Company\\Config") @doc(description: "Query to get config")
}

type Mutation {
    registerMpCompany(
        input: CompanyInput! @doc(description: "Company Input")
    ): CompanyOutput @resolver(class: "Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\Company\\Register") @doc(description: "Register the Company")
    saveMpCompany(
        input: CompanyInput! @doc(description: "Company Input")
    ): CompanyOutput @resolver(class: "Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\Company\\Save") @doc(description: "Update the Company")
    createMpCompanyUserRole(
        input: UserRolesInput! @doc(description: "User Roles Input")
        password: String! @doc(description: "Administrator Password")
    ): UserRolesOutput @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\UserRole\\Create") @doc(description: "Create User Role")
    saveMpCompanyUserRole(
        role_id: Int! @doc(description: "Role ID")
        input: UserRolesInput @doc(description: "User Roles Input")
        password: String! @doc(description: "Administrator Password")
    ): UserRolesOutput @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\UserRole\\Save") @doc(description: "Save User Role")
    deleteMpCompanyUserRole(
        role_id: Int! @doc(description: "Role ID")
        password: String! @doc(description: "Administrator Password")
    ): Boolean @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\UserRole\\Delete") @doc(description: "Delete User Role")
    createMpCompanyUser(
        input: UsersInput! @doc(description: "Users Input")
        password: String! @doc(description: "Administrator Password")
    ): UsersOutput @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\User\\Create") @doc(description: "Create User")
    saveMpCompanyUser(
        entity_id: Int! @doc(description: "User ID")
        input: UsersInput @doc(description: "Users Input")
        password: String! @doc(description: "Administrator Password")
    ): UsersOutput @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\User\\Save") @doc(description: "Save User")
    deleteMpCompanyUser(
        entity_id: Int! @doc(description: "User ID")
        password: String! @doc(description: "Administrator Password")
    ): Boolean @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\User\\Delete") @doc(description: "Delete User")
    confirmMpCompanyCreateUser(
        token: String! @doc(description: "User ID")
    ): Boolean @resolver(class: "\\Mageplaza\\CompanyAccountsGraphQl\\Model\\Resolver\\User\\Confirm") @doc(description: "Confirm User")
}

input CompanyInput {
    name: String!
    legal_name: String
    email: String!
    vat_id: String
    reseller_id: String
    street: String!
    city: String!
    region: String!
    region_id: Int!
    country_id: String!
    postcode: String!
    telephone: String!
}

input UserRolesInput {
    name: String!
    allow_all: Boolean
    order_quantity: Int
    order_amount: Float
    user_rules: [RulesInput]
}

input RulesInput {
    resource_id: String
    permission: String
}

input UsersInput {
    firstname: String!
    lastname: String!
    email: String!
    mpca_is_active: Boolean
    mpca_role_id: Int
    mpca_job_title: String
    mpca_telephone: String
}

type DownloadableOutput {
    order_increment_id: String @doc(description: "Order Increment Id")
    date: String @doc(description: "Date")
    status: String @doc(description: "Status")
    download_url: String @doc(description: "Download URL")
    remaining_downloads: String @doc(description: "Remaining Downloads")
}

type CompanyOutput {
    company_id: Int @doc(description: "Company ID")
    customer_group_id: Int @doc(description: "Customer Group ID")
    status: Int @doc(description: "Status")
    administrator_id: Int @doc(description: "Administrator ID")
    email: String @doc(description: "Email")
    name: String @doc(description: "Name")
    region: String @doc(description: "Region")
    region_id: Int @doc(description: "Region ID")
    sales_representative_id: Int @doc(description: "Sales Representative ID")
    country_id: String @doc(description: "Country ID")
    vat_id: String @doc(description: "VAT ID")
    legal_name: String @doc(description: "Legal Name")
    reseller_id: String @doc(description: "Reseller ID")
    street: String @doc(description: "Street")
    city: String @doc(description: "City")
    postcode: String @doc(description: "Post Code")
    telephone: String @doc(description: "Telephone")
    created_at: String @doc(description: "Created At")
    updated_at: String @doc(description: "Updated At")
}

type OrdersOutput {
    id: Int @doc(description: "ID")
    order_number: String @doc(description: "Order Number ID")
    date: String @doc(description: "Date")
    ship_to: String @doc(description: "Ship To")
    grand_total: Float @doc(description: "Grand Total")
    status: String @doc(description: "Status")
    placed_by: String @doc(description: "Placed By")
}

type UsersOutput {
    entity_id: Int @doc(description: "Entity ID")
    firstname: String @doc(description: "First Name")
    lastname: String @doc(description: "Last Name")
    email: String @doc(description: "Email")
    mpca_is_active: Boolean @doc(description: "Is Active")
    mpca_role_id: Int @doc(description: "Role ID")
    mpca_job_title: String @doc(description: "Job Title")
    mpca_telephone: String @doc(description: "Telephone")
}

type UserRolesOutput {
    role_id: Int @doc(description: "Role ID")
    name: String @doc(description: "Name")
    company_id: Int @doc(description: "Company ID")
    allow_all: Boolean @doc(description: "Allow All")
    order_quantity: Int @doc(description: "Order Quantity")
    order_amount: Float @doc(description: "Order Amount")
    created_at: String @doc(description: "Created At")
    updated_at: String @doc(description: "Updated At")
    user_rules: [UserRulesOutput] @doc(description: "User Rules")
}

type UserRulesOutput {
    rule_id: Int @doc(description: "Rule ID")
    role_id: Int @doc(description: "Role ID")
    resource_id: String @doc(description: "Resource ID")
    permission: String @doc(description: "Permission")
    created_at: String @doc(description: "Created At")
    updated_at: String @doc(description: "Updated At")
}

type ConfigOutput {
    general: GeneralOutput @doc(description: "General Config")
    email: EmailOutput @doc(description: "Email Config")
}

type GeneralOutput {
    enabled: Boolean @doc(description: "Enabled")
    customer_groups_allow: String @doc(description: "Customer Groups Allow")
    auto_approve_company: Boolean @doc(description: "Auto Approve Company")
    customer_groups_auto_approve: String @doc(description: "Customer Groups Auto Approve")
    sub_account_after_remove_action: Int @doc(description: "Sub Account After Remove Action")
    auto_add_address: Int @doc(description: "Auto Add Address")
}

type EmailOutput {
    admin: AdminEmailOutput @doc(description: "Admin Email Config")
    company_admin: CompanyAdminEmailOutput @doc(description: "Company Admin Email Config")
    company_user: CompanyUserEmailOutput @doc(description: "Company User Email Config")
}

type AdminEmailOutput {
    enabled: Boolean @doc(description: "")
    sender: String @doc(description: "")
    receiver: String @doc(description: "")
    new_request_template: String @doc(description: "")
}

type CompanyAdminEmailOutput {
    sender: String @doc(description: "")
    status_change: Boolean @doc(description: "")
    status_change_template: String @doc(description: "")
    user_update: Boolean @doc(description: "")
    user_update_template: String @doc(description: "")
    new_order: Boolean @doc(description: "")
    new_order_template: String @doc(description: "")
    role_update: Boolean @doc(description: "")
    role_update_template: String @doc(description: "")
}

type CompanyUserEmailOutput {
    sender: String @doc(description: "")
    status_change_template: String @doc(description: "")
    user_update_template: String @doc(description: "")
    new_order_template: String @doc(description: "")
    role_update_template: String @doc(description: "")
}
